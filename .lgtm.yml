path_classifiers:
  test:
    - hash_sha256_test
queries:
  # include all queries tagged 'security' and 'correctness', and with a severity of
  # 'error'.
  - include:           
      tags:
        - "security"
        - "correctness"           
      severity: "error"

extraction: 
  # Define settings for C/C++ analysis
  #####################################
  cpp:
    # The `prepare` step exists for customization on LGTM.com only.
    # prepare:
    #   # The `packages` section is valid for LGTM.com only. It names Ubuntu packages to
    #   # be installed.
    #   packages:
    #     - libxml2-dev
    #     - libxslt1-dev
    # Add an `after-prepare` step if you need to run commands after the prepare step.
    # Each command should be listed on a separate line.
    # This step is useful for C/C++ analysis where you want to prepare the environment
    # for the `configure` step without changing the default behavior for that step. 
    after_prepare:
      - export GNU_MAKE=make
      - export GIT=true
    # The `configure` step generates build configuration files which the `index` step
    # then uses to build the codebase.
    configure:
      command:
        - ./hash_sha256_test.exe
    # process.
    index:
      # Override the autobuild process by specifying a list of custom build commands
      build_command:
        - ./hash_sha256_test.exe
      # Specify that all project or solution files should be used for extraction.
      # Default: false.
      all_solutions: true
      solution: 
        - hash_sha256.sln
      # Specify MSBuild settings
      msbuild:
        configuration: Release
        # Specify the platform to target, for example: x86, x64, or Any CPU.
        # Default: read from the solution file or files.
        platform: x64
        # Specify the MSBuild target. Default: rebuild.
        target: rebuild
      # Specify whether or not to perform a NuGet restore for extraction. Default: true.
      nuget_restore: false
      # Specify a version of Microsoft Visual Studio to use for MSBuild or any custom
      # build commands (build_command). For example:
      #    10 for Visual Studio 2010
      #    12 for Visual Studio 2012
      #    14 for Visual Studio 2015
      #    15 for Visual Studio 2017
      # Default: read from project files.
      vstools_version: 22
