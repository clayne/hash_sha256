name: hash_sha256_test
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  gcc-clang-native:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++17, c++20 ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: gcc-clang-native
        run: |
          echo "gcc-clang-native"
          echo "${{ matrix.compiler }} -Werror -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -O3 -std=${{ matrix.standard }} hash_sha256_test.cpp -I. -o hash_sha256_test.exe"
          ${{ matrix.compiler }} -Werror -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -O3 -std=${{ matrix.standard }} hash_sha256_test.cpp -I. -o hash_sha256_test.exe
          echo "ls ./hash_sha256_test.exe"
          ls -la ./hash_sha256_test.exe
          ./hash_sha256_test.exe
  apple-gcc-clang-native:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++17, c++20 ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: apple-gcc-clang-native
        run: |
          echo "apple-gcc-clang-native"
          echo "${{ matrix.compiler }} -Werror -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -O3 -std=${{ matrix.standard }} hash_sha256_test.cpp -I. -o hash_sha256_test.exe"
          ${{ matrix.compiler }} -Werror -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -O3 -std=${{ matrix.standard }} hash_sha256_test.cpp -I. -o hash_sha256_test.exe
          echo "ls ./hash_sha256_test.exe"
          ls -la ./hash_sha256_test.exe
          ./hash_sha256_test.exe
  msvc-release-x64:
    runs-on: windows-2022
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
      - name: msvc-release-x64
        shell: cmd
        run: |
          set INCLUDE=%cd%;%INCLUDE%
          MSBuild -m hash_sha256.sln -p:useenv=true -p:Configuration=Release -p:Platform=x64 /t:Rebuild
          dir %cd%\Out\Bin\Release\hash_sha256.exe
          %cd%\Out\Bin\Release\hash_sha256.exe
  gnumake-clang-tidy-12-native:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++20 ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run:
          sudo apt install clang clang-tidy
      - name: gnumake-clang-tidy-12-native
        run: |
          echo "+++ print clang-tidy version"
          clang-tidy --version
          echo "+++ running clang-tidy"
          clang-tidy hash_sha256_test.cpp -checks=-*,-cppcoreguidelines-avoid-magic-numbers,-readability-magic-numbers,-llvm-header-guard
